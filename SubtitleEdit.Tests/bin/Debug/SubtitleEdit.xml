<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SubtitleEdit</name>
    </assembly>
    <members>
        <member name="P:Nikse.SubtitleEdit.Controls.Interfaces.IVideoPlayerContainer.Offset">
            <summary>
                Video offset in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.Interfaces.IVideoPlayerContainer.CurrentPosition">
            <summary>
                Current position in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.Interfaces.IVideoPlayerContainer.Duration">
            <summary>
                Total duration in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.MockVideoPlayerContainer.Offset">
            <summary>
            Video offset in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.MockVideoPlayerContainer.CurrentPosition">
            <summary>
            Current position in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.MockVideoPlayerContainer.Duration">
            <summary>
            Total duration in seconds
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Controls.SETextBox">
            <summary>
            TextBox where double click selects current word
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.VideoPlayerContainer.Offset">
            <summary>
            Video offset in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.VideoPlayerContainer.CurrentPosition">
            <summary>
            Current position in seconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.VideoPlayerContainer.Duration">
            <summary>
            Total duration in seconds
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Controls.TimeUpDown.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Controls.TimeUpDown.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Controls.TimeUpDown.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.AudioVisualizer.SceneChanges">
            <summary>
            Scene changes (seconds)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Controls.AudioVisualizer.Offset">
            <summary>
            Video offset in seconds
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Controls.AudioVisualizer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Controls.AudioVisualizer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Controls.AudioVisualizer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Controls.SubtitleListView.ColorOut(System.Int32,System.Drawing.Color)">
            <summary>
            Removes all text and set background color
            </summary>
            <param name="index"></param>
            <param name="color"></param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Core.FastFileStream">
            <summary>
            Exposes a <see cref="T:System.IO.Stream"/> around a file, supporting synchronous read operations.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FastFileStream.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nikse.SubtitleEdit.Core.FastFileStream"/> class with the specified path.
            </summary>
            <param name="path">A relative or absolute path for the file that the current <see cref="T:Nikse.SubtitleEdit.Core.FastFileStream"/> object will encapsulate.</param>
        </member>
        <member name="P:Nikse.SubtitleEdit.Core.FastFileStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Core.FastFileStream.Position">
            <summary>
            Gets or sets the current position of the stream.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FastFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value.
            </summary>
            <param name="offset">The point relative to <paramref name="origin"/> from which to begin seeking.</param>
            <param name="origin">Specifies the beginning, the end, or the current position as a reference point for origin, using a value of type <see cref="T:System.IO.SeekOrigin"/>.</param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FastFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a block of bytes from the stream and writes the data in a given buffer.
            </summary>
            <param name="array">When this method returns, contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The byte offset in <paramref name="array"/> at which the read bytes will be placed.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FastFileStream.ReadByte">
            <summary>
            Reads a byte from the file and advances the read position one byte.
            </summary>
            <returns>The byte, cast to an Int32, or -1 if the end of the stream has been reached.</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Core.FileUtil">
            <summary>
            File related utilities.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FileUtil.ReadAllBytesShared(System.String)">
            <summary>
            Opens a binary file in read/write shared mode, reads the contents of the file into a
            byte array, and then closes the file.
            </summary>
            <param name="path">The file to open for reading. </param>
            <returns>A byte array containing the contents of the file.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FileUtil.RetryOpenRead(System.String)">
            <summary>
            Opens an existing file for reading, and allow the user to retry if it fails.
            </summary>
            <param name="path">The file to be opened for reading. </param>
            <returns>A read-only <see cref="T:System.IO.FileStream"/> on the specified path.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.FileUtil.IsMaterialExchangeFormat(System.String)">
            <summary>
            Checks if file is an MXF file
            </summary>
            <param name="fileName">Input file</param>
            <returns>true if file is an MXF file, otherwise false</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Core.HtmlUtil">
            <summary>
                HTML specific string manipulations.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.HtmlUtil.RemoveOpenCloseTags(System.String,System.String[])">
            <summary>
                Remove all of the specified opening and closing tags from the source HTML string.
            </summary>
            <param name="source">The source string to search for specified HTML tags.</param>
            <param name="tags">The HTML tags to remove.</param>
            <returns>A new string without the specified opening and closing tags.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.HtmlUtil.EncodeText(System.String)">
            <summary>
                Converts a string to an HTML-encoded string using named character references.
            </summary>
            <param name="source">The string to encode.</param>
            <returns>An encoded string.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Core.RegistryUtil.GetValue(System.String,System.String)">
            <summary>
            Retrieves the specified registry subkey value.
            </summary>
            <param name="keyName">The path of the subkey to open.</param>
            <param name="valueName">The name of the value to retrieve.</param>
            <returns>The value of the subkey requested, or <b>null</b> if the operation failed.</returns>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AddWaveformBatch.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddWaveformBatch.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddWaveformBatch.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.CheckForUpdates.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.CheckForUpdates.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.CheckForUpdates.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Forms.ColorChooser">
            <summary>
              Summary description for ColorChooser.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ColorChooser.argb">
            <summary>
              Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ColorChooser.InitializeComponent">
            <summary>
              Required method for Designer support - do not modify
              the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesInterop.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesInterop.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesInterop.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesSmpte.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesSmpte.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DCinema.DCinemaPropertiesSmpte.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DoNotBreakAfterListEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DoNotBreakAfterListEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DoNotBreakAfterListEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.About.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.About.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.About.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToNamesList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToNamesList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AddToOcrReplaceList.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToOcrReplaceList.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToOcrReplaceList.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AddToUserDic.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToUserDic.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddToUserDic.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AddWaveform.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddWaveform.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AddWaveform.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AlignmentPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AlignmentPicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AlignmentPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ApplyDurationLimits.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ApplyDurationLimits.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ApplyDurationLimits.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AutoBreakUnbreakLines.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AutoBreakUnbreakLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AutoBreakUnbreakLines.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.BatchConvert.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.BatchConvert.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.BatchConvert.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Beamer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Beamer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Beamer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChangeCasing.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeCasing.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeCasing.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChangeCasingNames.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeCasingNames.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeCasingNames.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChangeFrameRate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeFrameRate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeFrameRate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChangeSpeedInPercent.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeSpeedInPercent.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChangeSpeedInPercent.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChooseAudioTrack.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseAudioTrack.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseAudioTrack.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChooseLanguage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseLanguage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseLanguage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChooseEncoding.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseEncoding.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseEncoding.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChooseResolution.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseResolution.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseResolution.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ChooseStyle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseStyle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ChooseStyle.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Compare.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Compare.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Compare.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.AdjustDisplayDuration.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AdjustDisplayDuration.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.AdjustDisplayDuration.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DurationsBridgeGaps.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DurationsBridgeGaps.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DurationsBridgeGaps.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportCustomText.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportCustomText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportCustomText.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportCustomTextFormat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportCustomTextFormat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportCustomTextFormat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportPngXmlPreview.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportPngXmlPreview.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportPngXmlPreview.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportTextST.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportTextST.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportTextST.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.FcpProperties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FcpProperties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FcpProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ImportImages.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportImages.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportImages.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ImportSceneChanges.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportSceneChanges.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportSceneChanges.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ImportUnknownFormat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportUnknownFormat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportUnknownFormat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MeasurementConverter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MeasurementConverter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MeasurementConverter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MergeTextWithSameTimeCodes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeTextWithSameTimeCodes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeTextWithSameTimeCodes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.NuendoProperties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NuendoProperties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NuendoProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.EbuSaveOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EbuSaveOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EbuSaveOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.EffectKaraoke.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EffectKaraoke.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EffectKaraoke.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.EffectTypewriter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EffectTypewriter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.EffectTypewriter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportPngXml.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportPngXml.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportPngXml.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExportText.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExportText.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ExtractDateTimeInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExtractDateTimeInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ExtractDateTimeInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.FindDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FindDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FindDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.FindSubtitleLine.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FindSubtitleLine.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FindSubtitleLine.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FixCommonErrors.FixSpanishInvertedQuestionAndExclamationMarks">
            <summary>
            Will try to fix issues with Spanish special letters ¿? and ¡!.
            Sentences ending with "?" must start with "¿".
            Sentences ending with "!" must start with "¡".
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.FixCommonErrors.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FixCommonErrors.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FixCommonErrors.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DvdSubRip.UpdatePresentationTimestamp(System.Byte[],System.Int64,Nikse.SubtitleEdit.Logic.VobSub.VobSubPack)">
            <summary>
            Write the 5 PTS bytes to buffer
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DvdSubRip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DvdSubRip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DvdSubRip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DvdSubRipChooseLanguage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DvdSubRipChooseLanguage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DvdSubRipChooseLanguage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.GetDictionaries.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GetDictionaries.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GetDictionaries.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.GetTesseractDictionaries.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GetTesseractDictionaries.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GetTesseractDictionaries.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.HardSubExtract.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.HardSubExtract.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.HardSubExtract.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Interjections.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Interjections.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Interjections.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.JoinSubtitles.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.JoinSubtitles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.JoinSubtitles.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MergeDoubleLines.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeDoubleLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeDoubleLines.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ModifySelection.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ModifySelection.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ModifySelection.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.NetworkChat.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkChat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkChat.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.NetworkJoin.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkJoin.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkJoin.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.NetworkLogAndInfo.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkLogAndInfo.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkLogAndInfo.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.NetworkStart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkStart.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.NetworkStart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.OpenVideoDvd.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.OpenVideoDvd.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.OpenVideoDvd.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.PacEncoding.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.PacEncoding.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.PacEncoding.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ColumnPaste.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ColumnPaste.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ColumnPaste.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.PluginsGet.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.PluginsGet.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.PluginsGet.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.RestoreAutoBackup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.RestoreAutoBackup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.RestoreAutoBackup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SeekSilence.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SeekSilence.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SeekSilence.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SetSyncPoint.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetSyncPoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetSyncPoint.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoogleTranslate.TranslateTextViaScreenScraping(System.String,System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Translate Text using Google Translate API's
            Google URL - https://www.google.com/translate_t?hl=en&amp;ie=UTF8&amp;text={0}&amp;langpair={1}
            </summary>
            <param name="input">Input string</param>
            <param name="languagePair">2 letter Language Pair, delimited by "|".
            E.g. "ar|en" language pair means to translate from Arabic to English</param>
            <param name="encoding">Encoding to use when downloading text</param>
            <param name="romanji">Get Romanjii text (made during Japanese) but in a separate div tag</param>
            <returns>Translated to String</returns>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.GoogleTranslate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoogleTranslate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoogleTranslate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.GoToLine.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoToLine.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoToLine.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ImportText.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportText.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ImportText.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Main.MakeHistoryForUndoOnlyIfNotResent(System.String)">
            <summary>
            Add undo history - but only if last entry is older than 500 ms
            </summary>
            <param name="description">Undo description</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Main.UndoToIndex(System.Boolean)">
            <summary>
            Undo or Redo
            </summary>
            <param name="undo">True equals undo, false triggers redo</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Main.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Main.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Main.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MatroskaSubtitleChooser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MatroskaSubtitleChooser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MatroskaSubtitleChooser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MergeShortLines.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeShortLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MergeShortLines.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.MultipleReplace.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MultipleReplace.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.MultipleReplace.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.OcrSpellCheck.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.OcrSpellCheck.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.OcrSpellCheck.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.FormRemoveTextForHearImpaired.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FormRemoveTextForHearImpaired.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.FormRemoveTextForHearImpaired.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ReplaceDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ReplaceDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ReplaceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SetMinimumDisplayTimeBetweenParagraphs.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetMinimumDisplayTimeBetweenParagraphs.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetMinimumDisplayTimeBetweenParagraphs.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Settings.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Settings.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Settings.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SetVideoOffset.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetVideoOffset.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SetVideoOffset.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ShowEarlierLater.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ShowEarlierLater.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ShowEarlierLater.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.ShowHistory.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ShowHistory.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.ShowHistory.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SpellCheck.GetTextWithoutUserWordsAndNames(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Removes words with dash'es that are correct, so spell check can ignore the combination (do not split correct words with dash'es)
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SpellCheck.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SpellCheck.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SpellCheck.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.DialogDoNotShowAgain.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DialogDoNotShowAgain.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.DialogDoNotShowAgain.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Split.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Split.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Split.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SplitLongLines.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SplitLongLines.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SplitLongLines.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SplitSubtitle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SplitSubtitle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SplitSubtitle.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.StartNumberingFrom.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.StartNumberingFrom.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.StartNumberingFrom.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Statistics.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Statistics.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Statistics.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.StatusLog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.StatusLog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.StatusLog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Styles.SubStationAlphaStyles.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Styles.SubStationAlphaStyles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Styles.SubStationAlphaStyles.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Styles.TimedTextStyles.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Styles.TimedTextStyles.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Styles.TimedTextStyles.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SubStationAlphaProperties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SubStationAlphaProperties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SubStationAlphaProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.TimedTextProperties.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.TimedTextProperties.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.TimedTextProperties.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.TransportStreamSubtitleChooser.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.TransportStreamSubtitleChooser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.TransportStreamSubtitleChooser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.UnknownSubtitle.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.UnknownSubtitle.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.UnknownSubtitle.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VideoControlsUndocked.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoControlsUndocked.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoControlsUndocked.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VideoError.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoError.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoError.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VideoPlayerUndocked.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoPlayerUndocked.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VideoPlayerUndocked.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VisualSync.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VisualSync.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VisualSync.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubEditCharacters.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubEditCharacters.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubEditCharacters.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubNOcrCharacterInspect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrCharacterInspect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrCharacterInspect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubNOcrEdit.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrEdit.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrEdit.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubNOcrTrain.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrTrain.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubNOcrTrain.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcr.SplitAndOcrBitmapNormal(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Ocr via image compare
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcr.SplitAndOcrBitmapNormalNew(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Ocr via image compare
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcr.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcr.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcr.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcrCharacter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrCharacter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrCharacter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcrCharacterInspect.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrCharacterInspect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrCharacterInspect.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcrNewFolder.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrNewFolder.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrNewFolder.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcrNOcrCharacter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrNOcrCharacter.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrNOcrCharacter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.VobSubOcrSetItalicFactor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrSetItalicFactor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.VobSubOcrSetItalicFactor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.Watermark.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Watermark.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.Watermark.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.WaveformGenerateTimeCodes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WaveformGenerateTimeCodes.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WaveformGenerateTimeCodes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.WaveformUndocked.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WaveformUndocked.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WaveformUndocked.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.GoogleOrMicrosoftTranslate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoogleOrMicrosoftTranslate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.GoogleOrMicrosoftTranslate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.WebVttNewVoice.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WebVttNewVoice.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.WebVttNewVoice.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.YouTubeAnnotationsImport.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.YouTubeAnnotationsImport.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.YouTubeAnnotationsImport.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Forms.SyncPointsSync.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SyncPointsSync.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Forms.SyncPointsSync.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.CommandLineConvert.GetArgument(System.String[],System.String)">
            <summary>
            Gets a argument from the command line
            </summary>
            <param name="commandLineArguments">All arguments from the command line</param>
            <param name="requestedArgumentName">The name of the argument that is requested</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.CommandLineConvert.GetArgument(System.String[],System.String,System.String)">
            <summary>
            Gets a argument from the command line
            </summary>
            <param name="commandLineArguments">All arguments from the command line</param>
            <param name="requestedArgumentName">The name of the argument that is requested</param>
            <param name="defaultValue">The default value, if the parameter could not be found</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.a">
            Byte buffer for alpha info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.b">
            Byte buffer for BLUE info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.cb">
            Byte buffer for Cb (chrominance blue) info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.cr">
            Byte buffer for Cr (chrominance red) info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.g">
            Byte buffer for GREEN info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.r">
            Byte buffer for RED info 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.size">
            Number of palette entries 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.useBT601">
            Use BT.601 color model instead of BT.709 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.y">
            Byte buffer for Y (luminance) info 
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.#ctor(System.Int32,System.Boolean)">
            Ctor - initializes palette with transparent black (RGBA: 0x00000000)
            @param palSize Number of palette entries
            @param use601  Use BT.601 instead of BT.709
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.#ctor(System.Int32)">
            Ctor - initializes palette with transparent black (RGBA: 0x00000000)
            @param palSize Number of palette entries
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Boolean)">
            Ctor - construct palette from red, green blue and alpha buffers
            @param red    Byte buffer containing the red components
            @param green  Byte buffer containing the green components
            @param blue   Byte buffer containing the blue components
            @param alpha  Byte buffer containing the alpha components
            @param use601 Use BT.601 instead of BT.709
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            Ctor - construct palette from red, green blue and alpha buffers
            @param red   Byte buffer containing the red components
            @param green Byte buffer containing the green components
            @param blue  Byte buffer containing the blue components
            @param alpha Byte buffer containing the alpha components
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.#ctor(Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette)">
            Ctor - construct new (independent) palette from existing one
            @param p Palette to copy values from
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.YCbCr2Rgb(System.Int32,System.Int32,System.Int32,System.Boolean)">
            Convert YCBCr color info to RGB
            @param y  8 bit luminance
            @param cb 8 bit chrominance blue
            @param cr 8 bit chrominance red
            @return Integer array with red, blue, green component (in this order)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.SetArgb(System.Int32,System.Int32)">
            Set palette index "index" to color "c" in ARGB format
            @param index Palette index
            @param c Color in ARGB format
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetArgb(System.Int32)">
            Return palette entry at index as Integer in ARGB format
            @param index Palette index
            @return Palette entry at index as Integer in ARGB format
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.SetRgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            Set palette entry (RGB mode)
            @param index Palette index
            @param red   8bit red component
            @param green 8bit green component
            @param blue  8bit blue component
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.SetYCbCr(System.Int32,System.Int32,System.Int32,System.Int32)">
            Set palette entry (YCbCr mode)
            @param index Palette index
            @param yn    8bit Y component
            @param cbn   8bit Cb component
            @param crn   8bit Cr component
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.SetAlpha(System.Int32,System.Int32)">
            Set alpha channel
            @param index Palette index
            @param alpha 8bit alpha channel value
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetAlpha(System.Int32)">
            Get alpha channel
            @param index Palette index
            @return 8bit alpha channel value
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetAlpha">
            Return byte array of alpha channel components
            @return Byte array of alpha channel components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetRgb(System.Int32)">
            Get Integer array containing 8bit red, green, blue components (in this order)
            @param index Palette index
            @return Integer array containing 8bit red, green, blue components (in this order)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetYCbCr(System.Int32)">
            Get Integer array containing 8bit Y, Cb, Cr components (in this order)
            @param index Palette index
            @return Integer array containing 8bit Y, Cb, Cr components (in this order)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetR">
            Return byte array of red components
            @return Byte array of red components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetG">
            Return byte array of green components
            @return Byte array of green components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetB">
            Return byte array of blue components
            @return Byte array of blue components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetY">
            Return byte array of Y components
            @return Byte array of Y components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetCb">
            Return byte array of Cb components
            @return Byte array of Cb components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetCr">
            Return byte array of Cr components
            @return Byte array of Cr components (don't modify!)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetSize">
            Get size of palette (number of entries)
            @return Size of palette (number of entries)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.GetTransparentIndex">
            Return index of most transparent palette entry or the index of the first completely transparent color
            @return Index of most transparent palette entry or the index of the first completely transparent color
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.UsesBt601">
            Get: use of BT.601 color model instead of BT.709
            @return True if BT.601 is used
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPalette.Rgb2YCbCr(System.Int32,System.Int32,System.Int32,System.Boolean)">
            Convert RGB color info to YCBCr
            @param r 8 bit red component
            @param g 8 bit green component
            @param b 8 bit blue component
            @return Integer array with luminance (Y), chrominance blue (Cb), chrominance red (Cr) (in this order)
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState">
            <summary>
                PGS composition state
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState.Normal">
            <summary>
                Normal: doesn't have to be complete
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState.AcquPoint">
            <summary>
                Acquisition point
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState.EpochStart">
            <summary>
                Epoch start - clears the screen
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState.EpochContinue">
            <summary>
                Epoch continue
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.CompositionState.Invalid">
            <summary>
                Unknown value
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.ParseBluRaySup(System.String,System.Text.StringBuilder)">
            <summary>
                Parses a Blu-ray sup file
            </summary>
            <param name="fileName">BluRay sup file name</param>
            <param name="log">Parsing info is logged here</param>
            <returns>List of BluRaySupPictures</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.ParsePcs(System.Byte[],System.Int32)">
            <summary>
                Parse an PCS packet which contains width/height info
            </summary>
            <param name="buffer">Raw data buffer, starting right after segment</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.ParsePds(System.Byte[],Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment)">
            <summary>
                parse an PDS packet which contain palette info
            </summary>
            <param name="buffer">Buffer of raw byte data, starting right after segment</param>
            <param name="segment">object containing info about the current segment</param>
            <returns>number of valid palette entries (-1 for fault)</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.ParseOds(System.Byte[],Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment,System.Boolean)">
            <summary>
                parse an ODS packet which contain the image data
            </summary>
            <param name="buffer">raw byte date, starting right after segment</param>
            <param name="segment">object containing info about the current segment</param>
            <returns>true if this is a valid new object (neither invalid nor a fragment)</returns>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment.DtsTimestamp">
            <summary>
                segment DTS time stamp
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment.PtsTimestamp">
            <summary>
                segment PTS time stamp
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment.Size">
            <summary>
                segment size in bytes
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupSegment.Type">
            <summary>
                Type of segment
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.SupDecoder.DecodeImage(Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.PcsObject,System.Collections.Generic.IList{Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.OdsData},System.Collections.Generic.List{Nikse.SubtitleEdit.Logic.BluRaySup.PaletteInfo})">
            <summary>
                Decode caption from the input stream
            </summary>
            <returns>bitmap of the decoded caption</returns>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupParser.PcsData.IsForced">
            <summary>
                if true, contains forced entry
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.ImageObjects">
            <summary>
                list of ODS packets containing image info
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.Palettes">
            <summary>
                List of (list of) palette info - there are up to 8 palettes per epoch, each can be updated several times
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.Width">
            <summary>
                screen width
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.Height">
            <summary>
                screen height
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.StartTime">
            <summary>
                start time in milliseconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.EndTime">
            <summary>
                end time in milliseconds
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.IsForced">
            <summary>
                if true, this is a forced subtitle
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.CompositionNumber">
            <summary>
                composition number - increased at start and end PCS
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.ObjectId">
            <summary>
                objectID used in decoded object
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.WindowWidth">
            <summary>
                width of subtitle window (might be larger than image)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.WindowHeight">
            <summary>
                height of subtitle window (might be larger than image)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.WindowXOffset">
            <summary>
                upper left corner of subtitle window x
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.WindowYOffset">
            <summary>
                upper left corner of subtitle window y
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.FramesPerSecondType">
            <summary>
                FPS type (e.g. 0x10 = 24p)
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.CreateSupFrame(Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture,System.Drawing.Bitmap,System.Double,System.Int32,System.Int32,System.Drawing.ContentAlignment)">
            <summary>
                Create RLE buffer from bitmap
            </summary>
            <param name="bm">Bitmap to compress</param>
            <param name="palette">Palette used for bitmap encoding</param>
            <returns>RLE buffer</returns>
            <summary>
                Create the binary stream representation of one caption
            </summary>
            <param name="pic">SubPicture object containing caption info</param>
            <param name="bmp">Bitmap</param>
            <param name="fps">Frames per second</param>
            <param name="bottomMargin">Image bottom margin</param>
            <param name="leftOrRightMargin">Image left/right margin</param>
            <param name="alignment">Alignment of image</param>
            <returns>Byte buffer containing the binary stream representation of one caption</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.BluRaySupPicture.GetFpsId(System.Double)">
            <summary>
                Get ID for given frame rate
            </summary>
            <param name="fps">frame rate</param>
            <returns>byte ID for the given frame rate</returns>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.Fps24P">
            Frames per seconds for 24p (23.976) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.Fps23975">
            Frames per seconds for wrong 24P (23.975) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.Fps24Hz">
            Frames per seconds for 24Hz (24.0) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.FpsPal">
            Frames per seconds for PAL progressive (25.0) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.FpsNtsc">
            Frames per seconds for NTSC progressive (29.97) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.FpsPalI">
            Frames per seconds for PAL interlaced (50.0) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.FpsNtscI">
            Frames per seconds for NTSC interlaced (59.94) 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.UseBt601">
            Use BT.601 color model instead of BT.709 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.SwapCrCb">
            Flag that defines whether to swap Cr/Cb components when loading a SUP 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.AlphaCrop">
            Alpha threshold for cropping 
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.Core.MergePtSdiff">
            Two equal captions are merged of they are closer than 200ms (0.2*90000 = 18000) 
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.Core.GetMergePtSdiff">
            Get maximum time difference for merging captions.
            @return Maximum time difference for merging captions
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.Core.UsesBt601">
            Get: use of BT.601 color model instead of BT.709.
            @return True if BT.601 is used
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.Core.GetSwapCrCb">
            Get flag that defines whether to swap Cr/Cb components when loading a SUP.
            @return True: swap cr/cb
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.Core.GetAlphaCrop">
            Get alpha threshold for cropping.
            @return Alpha threshold for cropping
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.Fragments">
            <summary>
                list of ODS packets containing image info
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.PaletteId">
            <summary>
                palette identifier
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.BufferSize">
            <summary>
                overall size of RLE buffer (might be spread over several packages)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.Width">
            <summary>
                with of subtitle image
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.Height">
            <summary>
                height of subtitle image
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.XOffset">
            <summary>
                upper left corner of subtitle x
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObject.YOffset">
            <summary>
                upper left corner of subtitle y
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObjectFragment">
            <summary>
                contains offset and size of one fragment containing (parts of the) RLE buffer
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObjectFragment.ImagePacketSize">
            <summary>
                size of this part of the RLE buffer
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.ImageObjectFragment.ImageBuffer">
            <summary>
                Buffer for raw image data fragment
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.BluRaySup.PaletteInfo">
            <summary>
                contains offset and size of one update of a palette
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.PaletteInfo.PaletteSize">
            <summary>
                number of palette entries
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.BluRaySup.PaletteInfo.PaletteBuffer">
            <summary>
                raw palette data
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.ToHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Convert bytes to a C-style hex string with leading zeroes
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.ToHex(System.Int32,System.Int32)">
            <summary>
                Convert a long integer to a C-style hex string with leading zeroes
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.MillisecondsToTime(System.Int64)">
            Convert time in milliseconds to array containing hours, minutes, seconds and milliseconds
            @param ms Time in milliseconds
            @return Array containing hours, minutes, seconds and milliseconds (in this order)
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.PtsToTimeString(System.Int64)">
            <summary>
                Convert time in 90kHz ticks to string hh:mm:ss.ms
            </summary>
            <param name="pts">Time in 90kHz resolution</param>
            <returns>String in format hh:mm:ss:ms</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.SetDWord(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Write (big endian) double word to buffer[index] (index points at most significant byte)
            </summary>
            <param name="buffer">Byte array</param>
            <param name="index">Index to write to</param>
            <param name="val">Integer value of double word to write</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.SetWord(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Write (big endian) word to buffer[index] (index points at most significant byte)
            </summary>
            <param name="buffer">Byte array</param>
            <param name="index">index Index to write to</param>
            <param name="val">val Integer value of word to write</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.BluRaySup.ToolBox.SetByte(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Write byte to buffer[index]
            </summary>
            <param name="buffer">Byte array</param>
            <param name="index">Index to write to</param>
            <param name="val">Integer value of byte to write</param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.ContainerFormats.MaterialExchangeFormat.KlvPacket">
            <summary>
                Key-Length-Value MXF package - http://en.wikipedia.org/wiki/KLV +
                http://en.wikipedia.org/wiki/Material_Exchange_Format
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.MaterialExchangeFormat.KlvPacket.GetBasicEncodingRuleLength(System.IO.Stream,System.Int32@)">
            <summary>
                Read length - never be more than 9 bytes in size (which means max 8 bytes of payload length)
                There are four kinds of encoding for the Length field: 1-byte, 2-byte, 4-byte
            </summary>
            <param name="stream"></param>
            <param name="bytesInLength"></param>
            <returns></returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.ContainerFormats.Mp4.MP4Parser">
            <summary>
                http://wiki.multimedia.cx/index.php?title=QuickTime_container
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.Mp4.MP4Parser.VideoResolution">
            <summary>
                Resolution of first video track. If not present returns 0.0
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.GetTrackStartTime(System.Int32)">
            <summary>
                Get first time of track
            </summary>
            <param name="trackNumber">Track number</param>
            <returns>Start time in milliseconds</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.GetInfo(System.Double@,System.Int32@,System.Int32@,System.Double@,System.String@)">
            <param name="duration">Duration of the segment in milliseconds.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.ReadUInt(System.Int32)">
            <summary>
                Reads a fixed length unsigned integer from the current stream and advances the current
                position of the stream by the integer length in bytes.
            </summary>
            <param name="length">The length in bytes of the integer.</param>
            <returns>A 64-bit unsigned integer.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.ReadInt16">
            <summary>
                Reads a 2-byte signed integer from the current stream and advances the current position
                of the stream by two bytes.
            </summary>
            <returns>A 2-byte signed integer read from the current stream.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.ReadFloat32">
            <summary>
                Reads a 4-byte floating point value from the current stream and advances the current
                position of the stream by four bytes.
            </summary>
            <returns>A 4-byte floating point value read from the current stream.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.ReadFloat64">
            <summary>
                Reads a 8-byte floating point value from the current stream and advances the current
                position of the stream by eight bytes.
            </summary>
            <returns>A 8-byte floating point value read from the current stream.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.Matroska.MatroskaFile.ReadString(System.Int32,System.Text.Encoding)">
            <summary>
                Reads a fixed length string from the current stream using the specified encoding.
            </summary>
            <param name="length">The length in bytes of the string.</param>
            <param name="encoding">The encoding of the string.</param>
            <returns>The string being read.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffDecodeHeader.ProcessList(Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser,System.Int32,System.Int32)">
            <summary>
                Default list element handler - skip the entire list
            </summary>
            <param name="rp"></param>
            <param name="FourCC"></param>
            <param name="length"></param>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffDecodeHeader.Parser">
            <summary>
                Access the internal parser object
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffDecodeHeader.ProcessAVIChunk(Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser,System.Int32,System.Int32,System.Int32)">
            <summary>
                Handle chunk elements found in the AVI file. Ignores unknown chunks and
            </summary>
            <param name="rp"></param>
            <param name="FourCC"></param>
            <param name="unpaddedLength"></param>
            <param name="paddedLength"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffDecodeHeader.ProcessAVIList(Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser,System.Int32,System.Int32)">
            <summary>
                Handle List elements found in the AVI file. Ignores unknown lists and recursively looks
                at the content of known lists.
            </summary>
            <param name="rp"></param>
            <param name="FourCC"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.OpenFile(System.String)">
            <summary>
                Determine if the file is a valid RIFF file
            </summary>
            <param name="filename">File to examine</param>
            <returns>True if file is a RIFF file</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ReadElement(System.Int32@,Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ProcessChunkElement,Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ProcessListElement)">
            <summary>
                Read the next RIFF element invoking the correct delegate.
                Returns true if an element can be read
            </summary>
            <param name="bytesleft">Reference to number of bytes left in the current list</param>
            <param name="chunk">Method to invoke if a chunk is found</param>
            <param name="list">Method to invoke if a list is found</param>
            <returns></returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ProcessListElement">
            <summary>
                Method to be called when a list element is found
            </summary>
            <param name="FourCCType"></param>
            <param name="length"></param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ProcessChunkElement">
            <summary>
                Method to be called when a chunk element is found
            </summary>
            <param name="FourCCType"></param>
            <param name="unpaddedLength"></param>
            <param name="paddedLength"></param>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.DataSize">
            <summary>
                RIFF data segment size
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.FileName">
            <summary>
                Current file name
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ShortName">
            <summary>
                Current short (name only) file name
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.FileRiff">
            <summary>
                Return the general file type (RIFF or RIFX);
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.FileType">
            <summary>
                Return the specific file type (AVI/WAV...)
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ReadTwoInts(System.Int32@,System.Int32@)">
            <summary>
                Non-thread-safe method to read two ints from the stream
            </summary>
            <param name="FourCC">Output FourCC int</param>
            <param name="size">Output chunk/list size</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ReadOneInt(System.Int32@)">
            <summary>
                Non-thread-safe read a single int from the stream
            </summary>
            <param name="FourCC">Output int</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.SkipData(System.Int32)">
            <summary>
                Skip the specified number of bytes
            </summary>
            <param name="skipBytes">Number of bytes to skip</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.ReadData(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Read the specified length into the byte array at the specified
                offset in the array
            </summary>
            <param name="data">Array of bytes to read into</param>
            <param name="offset">Offset in the array to start from</param>
            <param name="length">Number of bytes to read</param>
            <returns>Number of bytes actually read</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ContainerFormats.RiffParser.CloseFile">
            <summary>
                Close the RIFF file
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.MurMurHash3.Hash(System.Byte[])">
            <summary>
            Fast hashing of byte array
            </summary>
            <param name="arr">Byte array to hash</param>
            <returns>Hash value</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.#cctor">
            <summary>
                Static constructor that fills the default preferred codepages
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.GetMostEfficientEncoding(System.String)">
            <summary>
                Gets the best Encoding for usage in mime encodings
            </summary>
            <param name="input">text to detect</param>
            <returns>the suggested encoding</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.GetMostEfficientEncodingForStream(System.String)">
            <summary>
                Gets the best ISO Encoding for usage in a stream
            </summary>
            <param name="input">text to detect</param>
            <returns>the suggested encoding</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.GetMostEfficientEncoding(System.String,System.Int32[])">
            <summary>
                Gets the best fitting encoding from a list of possible encodings
            </summary>
            <param name="input">text to detect</param>
            <param name="preferredEncodings">an array of codepages</param>
            <returns>the suggested encoding</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.DetectInputCodepage(System.Byte[])">
            <summary>
                Detect the most probable codepage from an byte array
            </summary>
            <param name="input">array containing the raw data</param>
            <returns>the detected encoding or the default encoding if the detection failed</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.DetectInputCodepages(System.Byte[],System.Int32)">
            <summary>
                Rerurns up to maxEncodings codpages that are assumed to be apropriate
            </summary>
            <param name="input">array containing the raw data</param>
            <param name="maxEncodings">maxiumum number of encodings to detect</param>
            <returns>an array of Encoding with assumed encodings</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.ReadTextFile(System.String)">
            <summary>
                Opens a text file and returns the content
                encoded in the most probable encoding
            </summary>
            <param name="path">path to the souce file</param>
            <returns>the text content of the file</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.OpenTextFile(System.String)">
            <summary>
                Returns a stream reader for the given
                text file with the best encoding applied
            </summary>
            <param name="path">path to the file</param>
            <returns>a StreamReader for the file</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.DetectEncoding.EncodingTools.OpenTextStream(System.IO.Stream)">
            <summary>
                Creates a stream reader from a stream and detects
                the encoding form the first bytes in the stream
            </summary>
            <param name="stream">a stream to wrap</param>
            <returns>the newly created StreamReader</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.Fourier">
             <summary>
             Fourier transform
            
             *****************************************************************************
             *
             * Copyright (c) 2002, Wilhelm Kurz.  All Rights Reserved.
             * wkurz@foni.net
             *
             * This file is provided for demonstration and educational uses only.
             * Permission to use, copy, modify and distribute this file for
             * any purpose and without fee is hereby granted.
             *
             *****************************************************************************
             Converted/optimized by Nikse from vb code: http://www.wilhelm-kurz-software.de/dynaplot/applicationnotes/spectrogram.htm
             </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ManagedBitmap.GetRectangle(System.Drawing.Rectangle)">
            <summary>
            Copies a rectangle from the bitmap to a new bitmap
            </summary>
            <param name="section">Source rectangle</param>
            <returns>Rectangle from current image as new bitmap</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.NikseBitmap.ConverToFourColors(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Convert a x-color image to four colors, for e.g. DVD sub pictures.
            </summary>
            <param name="background">Background color</param>
            <param name="pattern">Pattern color, normally white or yellow</param>
            <param name="emphasis1">Emphasis 1, normally black or near black (border)</param>
            <param name="useInnerAntialize"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.NikseBitmap.GetBrightestColor">
            <summary>
            Returns brightest color (not white though)
            </summary>
            <returns>Brightest color, if not found or if brightes color is white, then Color.Transparent is returned</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.NikseBitmap.MakeBackgroundTransparent(System.Int32)">
            <summary>
            Make pixels with some transparency completely transparent
            </summary>
            <param name="minAlpha">Min alpha value, 0=transparent, 255=fully visible</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Ocr.Binary.BinaryOcrBitmap.GetRectangle(System.Drawing.Rectangle)">
            <summary>
                Copies a rectangle from the bitmap to a new bitmap
            </summary>
            <param name="section">Source rectangle</param>
            <returns>Rectangle from current image as new bitmap</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Ocr.OcrFixEngine.#ctor(System.String,System.String,System.Windows.Forms.Form)">
            <summary>
                Advanced OCR fixing via replace/spelling dictionaries + some hardcoded rules
            </summary>
            <param name="threeLetterIsoLanguageName">E.g. eng for English</param>
            <param name="hunspellName">Name of hunspell dictionary</param>
            <param name="parentForm">Used for centering/show spell check dialog</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Ocr.OcrFixEngine.SpellCheckOcrText(System.String,System.Drawing.Bitmap,System.String,System.Collections.Generic.List{System.String})">
            <summary>
                SpellCheck for OCR
            </summary>
            <returns>True, if word is fixed</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.TimeLineFootageAscii">
            <summary>
                Timeline Ascii export - THE MOVIE TITRE EDITOR - http://www.pld.ttu.ee/~priidu/timeline/ by priidu@pld.ttu.ee
                Sample:
                1.
                41,10
                46,10
                ±NE/SEVÎ
                ³ÂÍÅ/ÑÅÁß
                2.
                49,05
                51,09
                ±Viòð ir klât.
                ³Îí ïðèøåë.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.TimeLineAscii">
            <summary>
                Timeline Ascii export - THE MOVIE TITRE EDITOR - http://www.pld.ttu.ee/~priidu/timeline/ by priidu@pld.ttu.ee
                Sample:
                1.
                00:00:43.02
                00:00:47.03
                ±NE/SEVÎ
                ³ÂÍÅ/ÑÅÁß
                2.
                00:01:36.00
                00:01:37.00
                ±Viòð ir klât.
                ³Îí ïðèøåë.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.TimeLineMvt">
            <summary>
                Timeline - THE MOVIE TITRE EDITOR - http://www.pld.ttu.ee/~priidu/timeline/ by priidu@pld.ttu.ee
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Pns">
            <summary>
                PNS subtitle format
                00 00 + control bytes = 16 bytes
                START-MIN
                -----
                |
                |           START-FRAME
                |           --
                |           |     END-MIN
                |           |     -----
                |           |     |           END-FRAME
                |           |     |           --
                |           |     |           |
                |           |     |           |     TEXT-LENGTH
                |           |     |           |     --
                |           |     |           |     |
                02 00 00 00 02 01 7B 00 00 00 00 01 2D 00
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.PacUnicode">
            <summary>
                UniPac
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Chk">
            <summary>
                .CHK subtitle file format - 128 bytes blocks, first byte in block is id (01==text)
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.SatBoxPng">
            <summary>
                http://forum.videohelp.com/threads/365786-Converting-Subtitles-%28XML-PNG%29-to-idx-sub
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.SubtitleFormats.AdvancedSubStationAlpha.GetSsaColor(System.String,System.Drawing.Color)">
            <summary>
                BGR color like this: &amp;HBBGGRR&amp; (where BB, GG, and RR are hex values in uppercase)
            </summary>
            <param name="f">Input string</param>
            <param name="defaultColor">Default color</param>
            <returns>Input string as color, or default color if problems</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.SubtitleFormats.AdvancedSubStationAlpha.AddSsaStyle(Nikse.SubtitleEdit.Logic.SsaStyle,System.String)">
            <summary>
                Add new style to ASS header
            </summary>
            <returns>Header with new style</returns>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.SubtitleFormats.BelleNuitSubtitler.RegexTimeCode">
            tc 00:00:35:09 00:00:38:05
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.SoftNicolonSub">
            <summary>
                SoftNi - http://www.softni.com/
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.WebVTTFileWithLineNumber">
            <summary>
                http://www.whatwg.org/specs/web-apps/current-work/webvtt.html
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Lrc">
            <summary>
                LRC is a format that synchronizes song lyrics with an audio/video file, [mm:ss.xx] where mm is minutes, ss is
                seconds and xx is hundredths of a second.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.F4Text">
            <summary>
                #00:00:06-8#
                http://www.audiotranskription.de
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.ItunesTimedText">
            <summary>
                Crappy format... should always be saved as UTF-8 without BOM (hacked Main.cs) and <br /> tags should be oldstyle
                <br />
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.SubtitleFormats.Pac.LatinCodes">
            <summary>
                Contains Swedish, Danish, German, Spanish, and French letters
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.SubtitleFormats.Pac.FixItalics(System.String)">
            <summary>
                Fix italic tags, lines starting with ">" - whole line is italic, words between &lt;&gt; is italic
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.PListCaption">
            <summary>
                “Property Lists” (or “PLists” for short) is an xml format by Apple.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.ScenaristClosedCaptions">
            <summary>
                http://www.theneitherworld.com/mcpoodle/SCC_TOOLS/DOCS/SCC_FORMAT.HTML
                § 15.119 47 CFR Ch. I (10–1–10 Edition) (pdf)
                Maximum four lines + max 32 characters on each line
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.SmilTimesheetData">
            <summary>
                http://wam.inrialpes.fr/timesheets/annotations/video.html
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.SoftNiSub">
            <summary>
                SoftNi - http://www.softni.com/
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Ebu">
            <summary>
                EBU Subtitling data exchange format
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.SubtitleFormats.Ebu.GetCharacter(System.Boolean@,Nikse.SubtitleEdit.Logic.SubtitleFormats.Ebu.EbuGeneralSubtitleInformation,System.Byte[],System.Int32)">
            <summary>
                Get text with regard code page from header
            </summary>
            <param name="skipNext">Skip next character</param>
            <param name="header">EBU header</param>
            <param name="buffer">data buffer</param>
            <param name="index">index to current byte in buffer</param>
            <returns>Character at index</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Ebu.EbuGeneralSubtitleInformation">
            <summary>
                GSI block (1024 bytes)
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Ebu.EbuTextTimingInformation">
            <summary>
                TTI block 128 bytes
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.TranscriberXml">
            <summary>
                http://trans.sourceforge.net
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.Ultech130">
            <summary>
                The ULTECH caption file format (ULT/ULD file) is a compact binary file that stores captions with embedded EIA-608
                control codes
                http://en.wikipedia.org/wiki/EIA-608
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.UnknownSubtitle11">
            <summary>
                MicroDVD with time codes...?
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.UnknownSubtitle12">
            <summary>
                4.01     5.12
                Dit is de dag.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.UnknownSubtitle7">
            <summary>
                Reported by dipa nuswantara
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.WebVTT">
            <summary>
                http://www.whatwg.org/specs/web-apps/current-work/webvtt.html
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.SubtitleFormats.YouTubeSbv">
            <summary>
                YouTube "SubViewer" format... I think YouTube tried to add "SubViewer 2.0" support but instread they created their
                own format... nice ;)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.SubtitleFormats.SubtitleFormat.AllSubtitleFormats">
            <summary>
                Formats supported by Subtitle Edit
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Settings.CustomDeserialize(System.String)">
            <summary>
            A faster serializer than xml serializer... which is insanely slow (first time)!!!!
            This method is auto-generated with XmlSerializerGenerator
            </summary>
            <param name="fileName">File name of xml settings file to load</param>
            <returns>Newly loaded settings</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.Configuration">
            <summary>
            Configuration settings via Singleton pattern
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.SpellCheck.VoikkoSpellCheck.LoadLibVoikkoDynamic(System.String)">
            <summary>
                Load dll dynamic + set pointers to needed methods
            </summary>
            <param name="baseFolder"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.#ctor(Nikse.SubtitleEdit.Logic.Subtitle)">
            <summary>
            Copy constructor (only paragraphs)
            </summary>
            <param name="subtitle">Subtitle to copy</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.GetParagraphOrDefault(System.Int32)">
            <summary>
            Get the paragraph of index, null if out of bounds
            </summary>
            <param name="index">Index of wanted paragraph</param>
            <returns>Paragraph, null if index is index is out of bounds</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.ToText(Nikse.SubtitleEdit.Logic.SubtitleFormats.SubtitleFormat)">
            <summary>
            Creates subtitle as text in it's native format
            </summary>
            <param name="format">Format to output</param>
            <returns>Native format as text string</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.CalculateTimeCodesFromFrameNumbers(System.Double)">
            <summary>
            Calculate the time codes from frame number/frame rate
            </summary>
            <param name="frameRate">Number of frames per second</param>
            <returns>True if times could be calculated</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.CalculateFrameNumbersFromTimeCodes(System.Double)">
            <summary>
            Calculate the frame numbers from time codes/frame rate
            </summary>
            <param name="frameRate"></param>
            <returns></returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Subtitle.Sort(Nikse.SubtitleEdit.Logic.Enums.SubtitleSortCriteria)">
            <summary>
            Sort subtitle paragraphs
            </summary>
            <param name="sortCriteria">Paragraph sort criteria</param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.TaskbarList">
            <summary>
            Windows 7+ taskbar list - http://msdn.microsoft.com/en-us/library/windows/desktop/dd391692%28v=vs.85%29.aspx
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.ITaskbarList3">
            <summary>Extends ITaskbarList2 by exposing methods that support the unified launching and switching
            taskbar button functionality added in Windows 7. This functionality includes thumbnail representations
            and switch targets based on individual tabs in a tabbed application, thumbnail toolbars, notification
            and status overlays, and progress indicators.</summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.HrInit">
            <summary>Initializes the taskbar list object. This method must be
            called before any other ITaskbarList methods can be called.</summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.AddTab(System.IntPtr)">
            <summary>Adds an item to the taskbar.</summary>
            <param name="hWnd">A handle to the window to be
            added to the taskbar.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.DeleteTab(System.IntPtr)">
            <summary>Deletes an item from the taskbar.</summary>
            <param name="hWnd">A handle to the window to be deleted
            from the taskbar.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.ActivateTab(System.IntPtr)">
            <summary>Activates an item on the taskbar. The window is not actually activated;
            the window’s item on the taskbar is merely displayed as active.</summary>
            <param name="hWnd">A handle to the window on the taskbar to be displayed as active.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetActiveAlt(System.IntPtr)">
            <summary>Marks a taskbar item as active but does not visually activate it.</summary>
            <param name="hWnd">A handle to the window to be marked as active.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.MarkFullscreenWindow(System.IntPtr,System.Int32)">
            <summary>Marks a window as full-screen</summary>
            <param name="hWnd"></param>
            <param name="fullscreen"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetProgressValue(System.IntPtr,System.UInt64,System.UInt64)">
            <summary>Displays or updates a progress bar hosted in a taskbar button to show
            the specific percentage completed of the full operation.</summary>
            <param name="hWnd">The handle of the window whose associated taskbar button is being used as
            a progress indicator.</param>
            <param name="ullCompleted">An application-defined value that indicates the proportion of the
            operation that has been completed at the time the method is called.</param>
            <param name="ullTotal">An application-defined value that specifies the value ullCompleted will
            have when the operation is complete.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetProgressState(System.IntPtr,Nikse.SubtitleEdit.Logic.TaskbarButtonProgressFlags)">
            <summary>Sets the type and state of the progress indicator displayed on a taskbar button.</summary>
            <param name="hWnd">The handle of the window in which the progress of an operation is being
            shown. This window’s associated taskbar button will display the progress bar.</param>
            <param name="tbpFlags">Flags that control the current state of the progress button. Specify
            only one of the following flags; all states are mutually exclusive of all others.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.RegisterTab(System.IntPtr,System.IntPtr)">
            <summary>Informs the taskbar that a new tab or document thumbnail has been provided for
            display in an application’s taskbar group flyout.</summary>
            <param name="hWndTab">Handle of the tab or document window. This value is required and cannot
            be NULL.</param>
            <param name="hWndMDI">Handle of the application’s main window. This value tells the taskbar
            which application’s preview group to attach the new thumbnail to. This value is required and
            cannot be NULL.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.UnregisterTab(System.IntPtr)">
            <summary>Removes a thumbnail from an application’s preview group when that tab or document is closed in the application.</summary>
            <param name="hWndTab">The handle of the tab window whose thumbnail is being removed. This is the same
            value with which the thumbnail was registered as part the group through ITaskbarList3::RegisterTab.
            This value is required and cannot be NULL.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetTabOrder(System.IntPtr,System.IntPtr)">
            <summary>Inserts a new thumbnail into a tabbed-document interface (TDI) or multiple-document
            interface (MDI) application’s group flyout or moves an existing thumbnail to a new position in
            the application’s group.</summary>
            <param name="hWndTab">The handle of the tab window whose thumbnail is being placed. This value
            is required, must already be registered through ITaskbarList3::RegisterTab, and cannot be NULL.</param>
            <param name="hWndInsertBefore">The handle of the tab window whose thumbnail that hwndTab is
            inserted to the left of. This handle must already be registered through ITaskbarList3::RegisterTab.
            If this value is NULL, the new thumbnail is added to the end of the list.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetTabActive(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>Informs the taskbar that a tab or document window has been made the active window.</summary>
            <param name="hWndTab">Handle of the active tab window. This handle must already be registered
            through ITaskbarList3::RegisterTab. This value can be NULL if no tab is active.</param>
            <param name="hWndMDI">Handle of the application’s main window. This value tells the taskbar
            which group the thumbnail is a member of. This value is required and cannot be NULL.</param>
            <param name="tbatFlags">None, one, or both of the following values that specify a thumbnail
            and peek view to use in place of a representation of the specific tab or document.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.ThumbBarAddButtons(System.IntPtr,System.UInt32,Nikse.SubtitleEdit.Logic.ThumbButton[])">
            <summary>Adds a thumbnail toolbar with a specified set of buttons to the thumbnail image of a window
            in a taskbar button flyout.</summary>
            <param name="hWnd">The handle of the window whose thumbnail representation will receive the toolbar.
            This handle must belong to the calling process.</param>
            <param name="cButtons">The number of buttons defined in the array pointed to by pButton. The maximum
            number of buttons allowed is 7.</param>
            <param name="pButton">A pointer to an array of THUMBBUTTON structures. Each THUMBBUTTON defines an
            individual button to be added to the toolbar. Buttons cannot be added or deleted later, so this must
            be the full defined set. Buttons also cannot be reordered, so their order in the array, which is the
            order in which they are displayed left to right, will be their permanent order.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.ThumbBarUpdateButtons(System.IntPtr,System.UInt32,Nikse.SubtitleEdit.Logic.ThumbButton[])">
            <summary>Shows, enables, disables, or hides buttons in a thumbnail toolbar as required by the
            window’s current state. A thumbnail toolbar is a toolbar embedded in a thumbnail image of a window
            in a taskbar button flyout.</summary>
            <param name="hWnd">The handle of the window whose thumbnail representation contains the toolbar.</param>
            <param name="cButtons">The number of buttons defined in the array pointed to by pButton.
            The maximum number of buttons allowed is 7. This array contains only structures that represent existing buttons that are being updated.</param>
            <param name="pButton">A pointer to an array of THUMBBUTTON structures. Each THUMBBUTTON defines an individual button. If the button already exists
            (the iId value is already defined), then that existing button is updated with the information provided in the structure.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.ThumbBarSetImageList(System.IntPtr,System.IntPtr)">
            <summary>Specifies an image list that contains button images for a toolbar embedded in
            a thumbnail image of a window in a taskbar button flyout.</summary>
            <param name="hWnd">The handle of the window whose thumbnail representation contains the
            toolbar to be updated. This handle must belong to the calling process.</param>
            <param name="himl">The handle of the image list that contains all button images to be used in the toolbar.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetOverlayIcon(System.IntPtr,System.IntPtr,System.String)">
            <summary>Applies an overlay to a taskbar button to indicate application status or a notification to the user.</summary>
            <param name="hWnd">The handle of the window whose associated taskbar button receives the overlay.
            This handle must belong to a calling process associated with the button’s application and must be
            a valid HWND or the call is ignored.</param>
            <param name="hIcon">The handle of an icon to use as the overlay. This should be a small icon,
            measuring 16×16 pixels at 96 dots per inch (dpi). If an overlay icon is already applied to the
            taskbar button, that existing overlay is replaced.</param>
            <param name="pszDescription">A pointer to a string that provides an alt text version of the
            information conveyed by the overlay, for accessibility purposes.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetThumbnailTooltip(System.IntPtr,System.String)">
            <summary>Specifies or updates the text of the tooltip that is displayed when the mouse
            pointer rests on an individual preview thumbnail in a taskbar button flyout.</summary>
            <param name="hWnd">The handle to the window whose thumbnail displays the tooltip.
            This handle must belong to the calling process.</param>
            <param name="pszTip">The pointer to the text to be displayed in the tooltip. This value can
            be NULL, in which case the title of the window specified by hwnd is used as the tooltip.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.ITaskbarList3.SetThumbnailClip(System.IntPtr,System.IntPtr)">
            <summary>Selects a portion of a window’s client area to display as that window’s thumbnail in the taskbar.</summary>
            <param name="hWnd">The handle to a window represented in the taskbar.</param>
            <param name="prcClip">A pointer to a RECT structure that specifies a selection within the window’s
            client area, relative to the upper-left corner of that client area. To clear a clip that is already
            in place and return to the default display of the thumbnail, set this parameter to NULL.</param>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.Length">
            <summary>
            Number of bytes in the adaptation field immediately following the Length
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.PcrFlag">
            <summary>
            '1' indicates that the adaptation field contains a PCR field coded in two parts
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.OpcrFlag">
            <summary>
            '1' indicates that the adaptation field contains an OPCR field coded in two parts
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.SplicingPointFlag">
            <summary>
            '1' indicates that a splice countdown field shall be present in the associated adaptation field
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.TransportPrivateDataFlag">
            <summary>
            1' indicates that the adaptation field contains one or more private data bytes
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.AdaptationField.AdaptationFieldExtensionFlag">
            <summary>
            '1' indicates the presence of an adaptation field extension
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.TransportStream.TransportStreamSubtitle.GetActiveImage">
            <summary>
            Gets full image if 'ActiveImageIndex' not set, otherwise only gets image by index
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.TransportStream.Helper.GetEndianWord(System.Byte[],System.Int32)">
            <summary>
            Get two bytes word stored in endian order
            </summary>
            <param name="buffer">Byte array</param>
            <param name="index">Index in byte array</param>
            <returns>Word as int</returns>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.ObjectDataSegment.ObjectCodingMethod">
            <summary>
            0x00 coding of pixels, 0x01 coded as a string of characters
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.TransportStream.Packet">
            <summary>
            MPEG transport stream packet
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.TransportStream.Packet.SynchronizationByte">
            <summary>
            ID byte of TS Packet
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.TransportStream.Packet.NullPacketId">
            <summary>
            Null packets can ensure that the stream maintains a constant bitrate. Null packets is to be ignored
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.TransportStream.Packet.ProgramAssociationTablePacketId">
            <summary>
            Program Association Table: lists all programs available in the transport stream.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.TransportStream.Packet.ConditionalAccessTablePacketId">
             <summary>
            
             </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.TransportStream.Packet.TransportStreamDescriptionTablePacketId">
             <summary>
            
             </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.TransportErrorIndicator">
            <summary>
            Set by demodulator if can't correct errors in the stream, to tell the demultiplexer that the packet has an uncorrectable error
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.PayloadUnitStartIndicator">
            <summary>
            Start of PES data or PSI
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.TransportPriority">
            <summary>
            Higher priority than other packets with the same PID
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.PacketId">
            <summary>
            Program Identifier
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.ScramblingControl">
            <summary>
            1 = Reserved for future use, 10 = Scrambled with even key,  11 = Scrambled with odd key
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.AdaptationFieldControl">
            <summary>
            1 = no adaptation fields (payload only), 10 = adaptation field only, 11 = adaptation field and payload
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.TransportStream.Packet.ContinuityCounter">
            <summary>
            Incremented only when a payload is present (AdaptationFieldExist = 10 or 11). Starts at 0.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.TransportStream.TransportStreamParser">
            <summary>
            MPEG transport stream parser
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.TransportStream.TransportStreamParser.Parse(System.IO.Stream,Nikse.SubtitleEdit.Logic.TransportStream.TransportStreamParser.LoadTransportStreamCallback)">
            <summary>
            Can be used with e.g. MemoryStream or FileStream
            </summary>
            <param name="ms">Input stream</param>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.Utilities.NewLineChars">
            <summary>
            Cached environment new line characters for faster lookup.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.DownloadString(System.String)">
            <summary>
            Downloads the requested resource as a <see cref="T:System.String"/> using the configured <see cref="T:System.Net.WebProxy"/>.
            </summary>
            <param name="address">A <see cref="T:System.String"/> containing the URI to download.</param>
            <returns>A <see cref="T:System.String"/> containing the requested resource.</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.IsUtf8(System.Byte[],System.Boolean@)">
            <summary>
            Will try to determine if buffer is utf-8 encoded or not.
            If any non-utf8 sequences are found then false is returned, if no utf8 multibytes sequences are found then false is returned.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.UrlEncode(System.String)">
            <summary>
            UrlEncodes a string without the requirement for System.Web
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.UrlDecode(System.String)">
            <summary>
            UrlDecodes a string without requiring System.Web
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.RemoveUnneededSpaces(System.String,System.String)">
            <summary>
            Remove unneeded spaces
            </summary>
            <param name="text">text string to remove unneeded spaces from</param>
            <param name="language">two letter language id string</param>
            <returns>text with unneeded spaces removed</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.Utilities.TaskDelay(System.Int32)">
            <summary>
            Creates a task that will complete after a time delay.
            </summary>
            <param name="millisecondsDelay">The number of milliseconds to wait before completing the returned task.</param>
            <returns>A task that represents the time delay.</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VideoPlayers.LibVlcDynamic.LockCallbackDelegate">
            <summary>
            Callback prototype to allocate and lock a picture buffer. Whenever a new video frame needs to be decoded, the lock callback is invoked. Depending on the video chroma, one or three pixel planes of adequate dimensions must be returned via the second parameter. Those planes must be aligned on 32-bytes boundaries.
            </summary>
            <param name="opaque">Private pointer as passed to SetCallbacks()</param>
            <param name="planes">Planes start address of the pixel planes (LibVLC allocates the array of void pointers, this callback must initialize the array)</param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VideoPlayers.LibVlcDynamic.UnlockCallbackDelegate">
            <summary>
            Callback prototype to unlock a picture buffer. When the video frame decoding is complete, the unlock callback is invoked. This callback might not be needed at all. It is only an indication that the application can now read the pixel values if it needs to.
            </summary>
            <param name="opaque">Private pointer as passed to SetCallbacks()</param>
            <param name="picture">Private pointer returned from the LockCallback callback</param>
            <param name="planes">Pixel planes as defined by the @ref libvlc_video_lock_cb callback (this parameter is only for convenience)</param>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VideoPlayers.LibVlcDynamic.DisplayCallbackDelegate">
            <summary>
            Callback prototype to display a picture. When the video frame needs to be shown, as determined by the media playback clock, the display callback is invoked.
            </summary>
            <param name="opaque">Private pointer as passed to SetCallbacks()</param>
            <param name="picture">Private pointer returned from the LockCallback callback</param>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.VideoPlayers.LibVlcDynamic.AudioDelay">
            <summary>
            Audio delay in milliseconds
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.MessageHandlerWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.MessageHandlerWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.MessageHandlerWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.MpcHcCommand">
            <summary>
            HPC-HC API commands - https://github.com/mpc-hc/mpc-hc/blob/master/src/mpc-hc/MpcApi.h
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Hide">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Normal">
            <summary>
            Activates and displays a window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window
            for the first time.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowMinimized">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Maximize">
            <summary>
            Maximizes the specified window.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowMaximized">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowNoActivate">
            <summary>
            Displays a window in its most recent size and position. This value
            is similar to <see cref="!:Win32.ShowWindowCommand.Normal"/>, except
            the window is not activated.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Show">
            <summary>
            Activates the window and displays it in its current size and position.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Minimize">
            <summary>
            Minimizes the specified window and activates the next top-level
            window in the Z order.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowMinNoActive">
            <summary>
            Displays the window as a minimized window. This value is similar to
            <see cref="!:Win32.ShowWindowCommand.ShowMinimized"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowNA">
            <summary>
            Displays the window in its current size and position. This value is
            similar to <see cref="!:Win32.ShowWindowCommand.Show"/>, except the
            window is not activated.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.Restore">
            <summary>
            Activates and displays the window. If the window is minimized or
            maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ShowDefault">
            <summary>
            Sets the show state based on the SW_* value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.
            </summary>
        </member>
        <member name="F:Nikse.SubtitleEdit.Logic.VideoPlayers.MpcHC.NativeMethods.ShowWindowCommands.ForceMinimize">
            <summary>
             <b>Windows 2000/XP:</b> Minimizes a window, even if the thread
            that owns the window is not responding. This flag should only be
            used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.VideoPlayers.QuartsPlayer.Volume">
            <summary>
            In DirectX -10000 is silent and 0 is full volume.
            Also, -3500 to 0 seems to be all you can hear! Not much use for -3500 to -9999...
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.VideoPlayers.VideoPlayer.PlayRate">
            <summary>
            1.0 is normal playback speed, 0.5 is half speed, and 2.0 is twice speed.
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.Helper.GetEndianWord(System.Byte[],System.Int32)">
            <summary>
            Get two bytes word stored in endian order
            </summary>
            <param name="buffer">Byte array</param>
            <param name="index">Index in byte array</param>
            <returns>Word as int</returns>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VobSub.Mpeg2Header">
            <summary>
            http://www.mpucoder.com/DVD/packhdr.html
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VobSub.PacketizedElementaryStream">
            <summary>
            http://www.mpucoder.com/DVD/pes-hdr.html
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.VobSub.SubPicture">
            <summary>
            Subtitle Picture - see http://www.mpucoder.com/DVD/spu.html for more info
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.SubPicture.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            For SP packet with DVD subpictures
            </summary>
            <param name="data">Byte data buffer</param>
            <param name="startDisplayControlSequenceTableAddress">Address of first control sequence in data</param>
            <param name="pixelDataAddressOffset">Bitmap pixel data address offset</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.SubPicture.GetBitmap(System.Collections.Generic.List{System.Drawing.Color},System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)">
            <summary>
            Generates the current subtitle image
            </summary>
            <param name="colorLookupTable">The Color LookUp Table (CLUT), if null then only the four colors are used (should contain 16 elements if not null)</param>
            <param name="background">Background color</param>
            <param name="pattern">Color</param>
            <param name="emphasis1">Color</param>
            <param name="emphasis2">Color</param>
            <param name="useCustomColors">Use custom colors instead of lookup table</param>
            <returns>Subtitle image</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.VobSubParser.Open(System.IO.Stream)">
            <summary>
            Can be used with e.g. MemoryStream or FileStream
            </summary>
            <param name="ms"></param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.VobSubParser.MergeVobSubPacks">
            <summary>
            Demultiplex multiplexed packs together each streamId at a time + removing bad packs + fixing displaytimes
            </summary>
            <returns>List of complete packs each with a complete sub image</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.VobSubWriter.WriteContrast(System.IO.Stream)">
            <summary>
            Directly provides the four contrast (alpha blend) values to associate with the four pixel values. One nibble per pixel value for a total of 2 bytes. 0x0 = transparent, 0xF = opaque
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.VobSub.VobSubWriter.WriteColors(System.IO.Stream)">
            <summary>
            provides four indices into the CLUT for the current PGC to associate with the four pixel values. One nibble per pixel value for a total of 2 bytes.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.WordSpellChecker">
            <summary>
            Microsoft Word methods (late bound) for spell checking by Nikse
            Mostly a bunch of hacks...
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.Logic.WaveHeader">
            <summary>
            http://www-mmsp.ece.mcgill.ca/Documents/AudioFormats/WAVE/WAVE.html
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WaveHeader.AudioFormat">
            <summary>
            1 = PCM (uncompressed)
            0x0101 = IBM mu-law format
            0x0102 = IBM a-law format
            0x0103 = IBM AVC Adaptive Differential Pulse Code Modulation format
            0xFFFE = WAVE_FORMAT_EXTENSIBLE, Determined by SubFormat
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WaveHeader.SampleRate">
            <summary>
            Number of samples per second
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WaveHeader.ByteRate">
            <summary>
            Should be SampleRate * BlockAlign
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WaveHeader.BlockAlign">
            <summary>
            8 bytes per block (32 bit); 6 bytes per block (24 bit); 4 bytes per block (16 bit)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WaveHeader.DataChunkSize">
            <summary>
            Size of sound data
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WavePeakGenerator.DataMinValue">
            <summary>
            Lowest data value
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WavePeakGenerator.DataMaxValue">
            <summary>
            Highest data value
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WavePeakGenerator.PeaksPerSecond">
            <summary>
            Number of peaks per second (should be divideable by SampleRate)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WavePeakGenerator.PeakSamples">
            <summary>
            List of all peak samples (channels are merged)
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Logic.WavePeakGenerator.AllSamples">
            <summary>
            List of all samples (channels are merged)
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.WavePeakGenerator.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="fileName">Wave file name</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.WavePeakGenerator.#ctor(System.IO.Stream)">
            <summary>
            Constructor
            </summary>
            <param name="stream">Stream of a wave file</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.WavePeakGenerator.GeneratePeakSamples(System.Int32,System.Int32)">
            <summary>
            Generate peaks (samples with some interval) for an uncompressed wave file
            </summary>
            <param name="peaksPerSecond">Sampeles per second / sample rate</param>
            <param name="delayInMilliseconds">Delay in milliseconds (normally zero)</param>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.WavePeakGenerator.GetSampleDataRerader">
            <summary>
            Determine how to read sample values
            </summary>
            <returns>Sample data reader that matches bits per sample</returns>
        </member>
        <member name="M:Nikse.SubtitleEdit.Logic.WavePeakGenerator.MapToPixelIndex(System.Double,System.Double,System.Int32)">
            <summary>
            Maps magnitudes in the range [-rangedB .. 0] dB to palette index values in the range [0 .. rangeIndex-1]
            and computes and returns the index value which corresponds to passed-in magnitude
            </summary>
        </member>
        <member name="M:Nikse.SubtitleEdit.Program.Main">
            <summary>
            The 
            entry point for the application.
            </summary>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.#ctor">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.BreakSentencesCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectArrayCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetAppIdTokenCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguageNamesCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForSpeakCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForTranslateCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationArrayCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsArrayCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.SpeakCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateArrayCompleted">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslation(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.BreakSentences(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.BreakSentencesAsync(System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.BreakSentencesAsync(System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.Detect(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectArray(System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectArrayAsync(System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.DetectArrayAsync(System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetAppIdToken(System.String,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetAppIdTokenAsync(System.String,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetAppIdTokenAsync(System.String,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguageNames(System.String,System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguageNamesAsync(System.String,System.String,System.String[])">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguageNamesAsync(System.String,System.String,System.String[],System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForSpeak(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForSpeakAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForSpeakAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForTranslate(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForTranslateAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetLanguagesForTranslateAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslations(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsAsync(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsAsync(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.Translate(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateAsync(System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateAsync(System.String,System.String,System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationArray(System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.Translation[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationArrayAsync(System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.Translation[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.AddTranslationArrayAsync(System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.Translation[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsArray(System.String,System.String[],System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsArrayAsync(System.String,System.String[],System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.GetTranslationsArrayAsync(System.String,System.String[],System.String,System.String,System.Int32,System.Boolean,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.Speak(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.SpeakAsync(System.String,System.String,System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.SpeakAsync(System.String,System.String,System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateArray(System.String,System.String[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateArrayAsync(System.String,System.String[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.TranslateArrayAsync(System.String,System.String[],System.String,System.String,Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.MicrosoftTranslationService.SoapService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.Category">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.ContentType">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.ReservedFlags">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.State">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.Uri">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateOptions.User">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.Error">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.From">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.OriginalTextSentenceLengths">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.State">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.TranslatedText">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayResponse.TranslatedTextSentenceLengths">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.OriginalText">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.Rating">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.RatingSpecified">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.Sequence">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.SequenceSpecified">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.Translation.TranslatedText">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.Count">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.Error">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.MatchDegree">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.MatchedOriginalText">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.Rating">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslationMatch.TranslatedText">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsResponse">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsResponse.From">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsResponse.State">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsResponse.Translations">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.AddTranslationCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.BreakSentencesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.BreakSentencesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.BreakSentencesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectArrayCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectArrayCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.DetectArrayCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetAppIdTokenCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetAppIdTokenCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetAppIdTokenCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguageNamesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguageNamesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguageNamesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForSpeakCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForSpeakCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForSpeakCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForTranslateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForTranslateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetLanguagesForTranslateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.AddTranslationArrayCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsArrayCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsArrayCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.GetTranslationsArrayCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.SpeakCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.SpeakCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.SpeakCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.MicrosoftTranslationService.TranslateArrayCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SeService">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.#ctor">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.StartCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.JoinCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.LeaveCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.DeleteLinesCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.InsertLineCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.UpdateLineCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.SendMessageCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.GetUpdatesCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.GetSubtitleCompleted">
            <remarks/>
        </member>
        <member name="E:Nikse.SubtitleEdit.SeNetworkService.SeService.GetOriginalSubtitleCompleted">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.Start(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeSequence[],Nikse.SubtitleEdit.SeNetworkService.SeSequence[],System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.StartAsync(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeSequence[],Nikse.SubtitleEdit.SeNetworkService.SeSequence[],System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.StartAsync(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeSequence[],Nikse.SubtitleEdit.SeNetworkService.SeSequence[],System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.Join(System.String,System.String,System.String@)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.JoinAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.JoinAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.Leave(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.LeaveAsync(System.String,System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.LeaveAsync(System.String,System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.DeleteLines(System.String,System.Int32[],Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.DeleteLinesAsync(System.String,System.Int32[],Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.DeleteLinesAsync(System.String,System.Int32[],Nikse.SubtitleEdit.SeNetworkService.SeUser,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.InsertLine(System.String,System.Int32,System.Int32,System.Int32,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.InsertLineAsync(System.String,System.Int32,System.Int32,System.Int32,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.InsertLineAsync(System.String,System.Int32,System.Int32,System.Int32,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.UpdateLine(System.String,System.Int32,Nikse.SubtitleEdit.SeNetworkService.SeSequence,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.UpdateLineAsync(System.String,System.Int32,Nikse.SubtitleEdit.SeNetworkService.SeSequence,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.UpdateLineAsync(System.String,System.Int32,Nikse.SubtitleEdit.SeNetworkService.SeSequence,Nikse.SubtitleEdit.SeNetworkService.SeUser,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.SendMessage(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.SendMessageAsync(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.SendMessageAsync(System.String,System.String,Nikse.SubtitleEdit.SeNetworkService.SeUser,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetUpdates(System.String,System.String,System.DateTime,System.String@,System.DateTime@,System.Int32@)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetUpdatesAsync(System.String,System.String,System.DateTime)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetUpdatesAsync(System.String,System.String,System.DateTime,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetSubtitle(System.String,System.String@,System.DateTime@)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetSubtitleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetSubtitleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetOriginalSubtitle(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetOriginalSubtitleAsync(System.String)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.GetOriginalSubtitleAsync(System.String,System.Object)">
            <remarks/>
        </member>
        <member name="M:Nikse.SubtitleEdit.SeNetworkService.SeService.CancelAsync(System.Object)">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SeSequence">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeSequence.Index">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeSequence.StartMilliseconds">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeSequence.EndMilliseconds">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeSequence.Text">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SeUpdate">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.Time">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.User">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.Index">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.StartMilliseconds">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.EndMilliseconds">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.Text">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUpdate.Action">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SeUser">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUser.UserName">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUser.Ip">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SeUser.LastActivity">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.StartCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.StartCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.StartCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.StartCompletedEventArgs.message">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.JoinCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.JoinCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.JoinCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.JoinCompletedEventArgs.message">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.LeaveCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.DeleteLinesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.DeleteLinesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.DeleteLinesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.InsertLineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.InsertLineCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.InsertLineCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.UpdateLineCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.UpdateLineCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.UpdateLineCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SendMessageCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.SendMessageCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.SendMessageCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventArgs.message">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventArgs.newUpdateTime">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetUpdatesCompletedEventArgs.numberOfLines">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetSubtitleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetSubtitleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetSubtitleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetSubtitleCompletedEventArgs.fileName">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetSubtitleCompletedEventArgs.updateTime">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetOriginalSubtitleCompletedEventHandler">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.SeNetworkService.GetOriginalSubtitleCompletedEventArgs">
            <remarks/>
        </member>
        <member name="P:Nikse.SubtitleEdit.SeNetworkService.GetOriginalSubtitleCompletedEventArgs.Result">
            <remarks/>
        </member>
        <member name="T:Nikse.SubtitleEdit.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.connect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.Donate">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.SubtitleEditFormIcon">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Nikse.SubtitleEdit.Properties.Resources.TransparentBackground">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:MultiLanguage.DetectEncodingInfo">
            Thanks to jannewe for finding the fix!
            http://www.codeproject.com/KB/recipes/DetectEncoding.aspx?msg=3247475#xx3247475xx
        </member>
        <member name="T:System.IO.Compression.ZipExtractor">
            <summary>
            Zip archive decompression. Represents a Zip file.
            </summary>
        </member>
        <member name="T:System.IO.Compression.ZipExtractor.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.Compression.Store">
            <summary>Uncompressed storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:System.IO.Compression.ZipExtractor.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:System.IO.Compression.ZipExtractor.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.Open(System.String)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="filename">Full path of Zip file to open</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.Open(System.IO.Stream)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="stream">Already opened stream with zip contents</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.Close">
            <summary>
            Close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.ReadCentralDir">
            <summary>
            Read all the file records in the central directory
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.ExtractFile(System.IO.Compression.ZipExtractor.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="zfe">Entry information of file to extract</param>
            <param name="filename">Name of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.ExtractFile(System.IO.Compression.ZipExtractor.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="zfe">Entry information of file to extract</param>
            <param name="stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipExtractor.GetFileOffset(System.UInt32)">
            <summary>
            Calculate the file offset by reading the corresponding local header
            </summary>
        </member>
    </members>
</doc>
